{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/dev/joy-of-react/01-fundamentals/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"introduce\" style=\"position:relative;\"><a href=\"#introduce\" aria-label=\"introduce permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduce</h2>\n<p>Facebook team은 phantom message라고 불리우는 문제(새로운 메세지가 왔다고 빨간 Badge가 뜨지만, 클릭해서 보면 아무런 메세지가 없는 버그)가 있었고 이를 해결하면 또 다른 문제가 발생하곤 했다.\n<br />\n이것을 React로 해결했다. 자세한 내용은 아래에서 확인 가능하다.\n<a href=\"https://youtu.be/nYkdrAPrdcw?t=624\">(Youtube)Hacker Way: Rethinking Web App Development at Facebook</a>\n<br />\n리액트의 장점은 DOM과 JS간 state sync를 신경쓰지 않아도 된다는 점이다.\n<br />\n기본 예제는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">// 1. Import dependencies</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createRoot <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. Create a React element</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Hello World!'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3. Render the application</span>\n<span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> <span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">react</code>와 <code class=\"language-text\">react-dom</code>은 왜 나눴을까? <br/>\n바로 <code class=\"language-text\">platform agnostic</code> 때문이다.</p>\n<ul>\n<li>react-dom for the web</li>\n<li>react-native for mobile (iOS / Android) or desktop (Windows / MacOS) applications</li>\n<li>react-three-fiber for 3D scenes using WebGL and Three.js</li>\n</ul>\n<blockquote>\n<p>DOM: DOM stands for Document Object Model. <br/></p>\n</blockquote>\n<p>static 한 HTML을 Browser가 DOM으로 변경해서 사용자에게 보여주게 된다.</p>\n<p><code class=\"language-text\">render</code> function은 React elements를 DOM으로 변경해준다.</p>\n<p>아래와 같은 예제도 찾을 수 있는데 이는 React v17 혹은 그 이전 버전 방식이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  container\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"Introduce Facebook team은 phantom message라고 불리우는 문제(새로운 메세지가 왔다고 빨간 Badge가 뜨지만, 클릭해서 보면 아무런 메세지가 없는 버그)가 있었고 이를 해결하면 또 다른 문제가 발생하곤 했다.\n\n이것을 React…","frontmatter":{"date":"31 January, 2023","path":"/blog/dev/joy-of-react/01-fundamentals/","title":"01-Fundamentals"},"timeToRead":1}},"pageContext":{}},"staticQueryHashes":["2744905544","3649515864","63159454"],"slicesMap":{}}