{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/education/fullstack-d3-master-class/","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://codesandbox.io/s/d3-practice-7zs7i7?file=/src/index.js\">https://codesandbox.io/s/d3-practice-7zs7i7?file=/src/index.js</a></p>\n<p>데이터를 불러오는 방법에는 여러가지가 있다.</p>\n<p>d3.csv(), d3.json(), and d3.xml(). Since we're working with a JSON file, we want to pass our file path to d3.json().</p>\n<h3>Accessor</h3>\n<p>getter와 같은 용도로 쓰인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">xAccessor</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">d</span> <span class=\"token operator\">=></span> d<span class=\"token punctuation\">.</span>date\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">yAccessor</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">d</span> <span class=\"token operator\">=></span> d<span class=\"token punctuation\">.</span>temperatureMax</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>근데 데이터의 형태가 date는 string으로 들어있기 때문에 축으로써 사용하기를 힘들다. 왜? string으로는 대소비교를 할 수 없기 때문이다. <br />\n그렇기에 d3의 <code class=\"language-text\">timeparse</code>를 이용해 string을 date obj로 변환해서 쓴다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> dateParser <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeParse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">xAccessor</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">d</span> <span class=\"token operator\">=></span> <span class=\"token function\">dateParser</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>area</h3>\n<p>차트를 그릴 때 Wrapper와 Bounds에 대한 정의가 필요하다. 선택한 단어는 강의에서 편하고자 정의한 것이니 general하지 않을 수 있다.</p>\n<ul>\n<li>Wrapper: 차트, 축 및 여백을 포함한 모든 영역을 지칭</li>\n<li>Bounds: 축을 제외한 차트가 그려지는 내부만 지칭</li>\n</ul>\n<p>이를 정의해야 원하는 크기의 차트와 축을 그리기 쉽다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> dimensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">right</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">bottom</span><span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> margin <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> dimensions\n\ndimensions<span class=\"token punctuation\">.</span>boundedWidth <span class=\"token operator\">=</span> width <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>right\ndimensions<span class=\"token punctuation\">.</span>boundedHeight <span class=\"token operator\">=</span> height <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> margin<span class=\"token punctuation\">.</span>bottom\n\n### select\n\n<span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#wrapper\"</span><span class=\"token punctuation\">)</span>\n\n### adding svg\n\nWeb <span class=\"token constant\">API</span>의 createElement와 appendChild를 <span class=\"token constant\">D3</span>는 한 번에 해결할 수 있다<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">const</span> svg <span class=\"token operator\">=</span> wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.attr()</span><span class=\"token template-punctuation string\">`</span></span> 메소드를 이용해 attr을 추가할 수 있다<span class=\"token punctuation\">.</span>\nsvg<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> dimensions<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span>\nsvg<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> dimensions<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n\n위의 코드를 한 번에 해결할 수도 있다<span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">const</span> wrapper <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#wrapper\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> dimensions<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> dimensions<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"https://codesandbox.io/s/d3-practice-7zs7i7?file=/src/index.js 데이터를 불러오는 방법에는 여러가지가 있다. d3.csv(), d3.json(), and d3.xml(). Since we're working with a JSON file…","frontmatter":{"date":"25 January, 2023","path":"/blog/education/fullstack-d3-master-class/","title":"Fullstack D3 Master Class"},"timeToRead":1}},"pageContext":{}},"staticQueryHashes":["2744905544","3649515864","63159454"],"slicesMap":{}}