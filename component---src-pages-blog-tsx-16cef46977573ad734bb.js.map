{"version":3,"file":"component---src-pages-blog-tsx-16cef46977573ad734bb.js","mappings":"+KAOA,MAAMA,GAAO,cAAAC,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,4DAMPC,GAAW,aAAAH,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,iCAKXE,GAAY,aAAAJ,OAAAA,aAAA,EAAAC,KAAAA,UAAAC,OAAAA,qMAWZG,GAAW,aAAAL,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,iCAGf,OAAAD,KAAAA,SAAAC,OAAAA,sCAqCF,UAnCkBI,IAAmB,IAAlB,KAAEC,GAAW,EAC9B,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,IAACE,EAAAA,EAAG,CAACC,MAAM,UACXH,EAAAA,EAAAA,IAACT,EAAO,MACNS,EAAAA,EAAAA,IAAAA,KAAAA,KAAAA,QACCD,EAAKK,kBAAkBC,MAMrBC,KAAIC,IAAA,IAAC,KAAEC,GAAW,SACjBR,EAAAA,EAAAA,IAAAA,MAAAA,CAAKS,IAAKD,EAAKE,KACbV,EAAAA,EAAAA,IAACW,EAAAA,KAAI,CACHC,GAAIJ,EAAKK,YAAYC,KACrBC,IAAG,IAKHf,EAAAA,EAAAA,IAACJ,EAAY,KAAEY,EAAKK,YAAYV,SAElCH,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACL,EAAW,KAAEa,EAAKK,YAAYG,OAC/BhB,EAAAA,EAAAA,IAACH,EAAW,WAAKW,EAAKS,WAAU,UAElCjB,EAAAA,EAAAA,IAAAA,IAAAA,KAAIQ,EAAKU,SACL,KAGL,C","sources":["webpack://personal-blog/./src/pages/blog.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`;\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(255, 250, 150, 0.15),\n    rgba(255, 250, 150, 0.8) 100%,\n    rgba(255, 250, 150, 0.25)\n  );\n`;\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`;\n\nconst IndexPage = ({ data }: any) => {\n  return (\n    <Layout>\n      <Seo title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges\n          // .filter(({ node }: any) => {\n          //   const rawDate = node.frontmatter.rawDate\n          //   const date = new Date(rawDate)\n          //   return date < new Date()\n          // })\n          .map(({ node }: any) => (\n            <div key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title}</MarkerHeader>\n              </Link>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                <ReadingTime> - {node.timeToRead} min</ReadingTime>\n              </div>\n              <p>{node.excerpt}</p>\n            </div>\n          ))}\n      </Content>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: {frontmatter: {date: DESC}}\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n          }\n          timeToRead\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"names":["Content","target","name","styles","ArticleDate","MarkerHeader","ReadingTime","_ref2","data","___EmotionJSX","Layout","Seo","title","allMarkdownRemark","edges","map","_ref3","node","key","id","Link","to","frontmatter","path","css","date","timeToRead","excerpt"],"sourceRoot":""}